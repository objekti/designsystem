.button {
  --fdsc-border-radius: var(--fds-border_radius-interactive);
  --fdsc-button-size: var(--fds-component-mode-height-small);
  --fdsc-button-padding: var(--fds-spacing-1) var(--fds-spacing-2);
  --fdsc-font-and-icon-color: var(--fds-semantic-text-action-primary-on_action);
  --fdsc-icon-size: var(--fds-sizing-4);

  composes: focusable from '../../utils/utility.module.css';
  align-items: center;
  border-radius: var(--fdsc-border-radius);
  border: var(--fds-border_width-default) solid transparent;
  box-sizing: border-box;
  color: var(--fdsc-font-and-icon-color);
  cursor: pointer;
  display: flex;
  fill: var(--fdsc-font-and-icon-color);
  font-family: inherit;
  height: var(--fdsc-button-size);
  justify-content: center;
  letter-spacing: var(--typography-default-letter-spacing);
  padding: var(--fdsc-button-padding);
  text-align: center;
}

.button:disabled,
.button[aria-disabled='true'] {
  cursor: auto;
  opacity: var(--fds-opacity-disabled);
}

.icon {
  display: inline-block;
  height: var(--fdsc-icon-size);
  width: var(--fdsc-icon-size);
}

.button.small {
  --fdsc-button-size: var(--fds-component-mode-height-small);
  --fdsc-button-padding: var(--fds-spacing-1) var(--fds-spacing-2);
  --fdsc-icon-size: var(--fds-sizing-4);

  gap: var(--fds-sizing-2);
}

.button.medium {
  --fdsc-button-size: var(--fds-component-mode-height-medium);
  --fdsc-button-padding: var(--fds-spacing-2) var(--fds-spacing-3);
  --fdsc-icon-size: var(--fds-sizing-6);

  gap: var(--fds-sizing-3);
}

.button.large {
  --fdsc-button-size: var(--fds-component-mode-height-large);
  --fdsc-button-padding: var(--fds-spacing-2) var(--fds-spacing-3);
  --fdsc-icon-size: var(--fds-sizing-8);

  gap: var(--fds-sizing-3);
}

.button.fullWidth {
  width: 100%;
}

.button.dashedBorder {
  border-style: dashed;
}

.button.outline {
  background-color: transparent;
}

.button.quiet {
  padding: 0 var(--fds-spacing-2);
  background-color: transparent;
}

.button.onlyIcon {
  padding: calc((var(--fdsc-button-size) - var(--fdsc-icon-size)) / 2 - var(--fds-border_width-default));
}

/* Filled button colors */
.button.filled.primary {
  background: var(--fds-semantic-surface-action-primary-default);
}

.button.filled.primary:not([aria-disabled='true'], :disabled):hover {
  background: var(--fds-semantic-surface-action-primary-hover);
}

.button.filled.primary:not([aria-disabled='true'], :disabled):active {
  background: var(--fds-semantic-surface-action-primary-active);
}

.button.filled.secondary {
  background: var(--fds-semantic-surface-action-secondary-default);
}

.button.filled.secondary:not([aria-disabled='true'], :disabled):hover {
  background: var(--fds-semantic-surface-action-secondary-hover);
}

.button.filled.secondary:not([aria-disabled='true'], :disabled):active {
  background: var(--fds-semantic-surface-action-secondary-active);
}

.button.filled.success {
  background: var(--fds-semantic-surface-success-default);
}

.button.filled.success:not([aria-disabled='true'], :disabled):hover {
  background: var(--fds-semantic-surface-success-hover);
}

.button.filled.success:not([aria-disabled='true'], :disabled):active {
  background: var(--fds-semantic-surface-success-active);
}

.button.filled.danger {
  background: var(--fds-semantic-surface-danger-default);
}

.button.filled.danger:not([aria-disabled='true'], :disabled):hover {
  background: var(--fds-semantic-surface-danger-hover);
}

.button.filled.danger:not([aria-disabled='true'], :disabled):active {
  background: var(--fds-semantic-surface-danger-active);
}

.button.filled.inverted {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-neutral-default);

  background: var(--fds-semantic-surface-on_inverted-default);
}

.button.filled.inverted:not([aria-disabled='true'], :disabled):hover {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-neutral-default);

  background: var(--fds-semantic-surface-on_inverted-hover);
}

.button.filled.inverted:not([aria-disabled='true'], :disabled):active {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-neutral-default);

  background: var(--fds-semantic-surface-on_inverted-active);
}

/* Outline button colors */
.button.outline.primary {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-action-primary-default);

  border-color: var(--fds-semantic-border-action-primary-default);
  background: var(--fds-semantic-surface-action-primary-no_fill);
}

.button.outline.primary:not([aria-disabled='true'], :disabled):hover {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-action-primary-hover);

  border-color: var(--fds-semantic-border-action-primary-hover);
  background: var(--fds-semantic-surface-action-primary-no_fill-hover);
}

.button.outline.primary:not([aria-disabled='true'], :disabled):active {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-action-primary-active);

  border-color: var(--fds-semantic-border-action-primary-active);
  background: var(--fds-semantic-surface-action-primary-no_fill-active);
}

.button.outline.secondary {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-action-secondary-default);

  border-color: var(--fds-semantic-border-action-secondary-active);
  background: var(--fds-semantic-surface-action-secondary-no_fill-active);
}

.button.outline.secondary:not([aria-disabled='true'], :disabled):hover {
  border-color: var(--fds-semantic-border-action-secondary-hover);
  background: var(--fds-semantic-surface-action-secondary-no_fill-hover);
}

.button.outline.secondary:not([aria-disabled='true'], :disabled):active {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-action-secondary-active);

  border-color: var(--fds-semantic-border-action-secondary-active);
  background: var(--fds-semantic-surface-action-secondary-no_fill-active);
}

.button.outline.success {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-success-default);

  border-color: var(--fds-semantic-border-success-default);
  background: var(--fds-semantic-surface-success-no_fill);
}

.button.outline.success:not([aria-disabled='true'], :disabled):hover {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-success-hover);

  border-color: var(--fds-semantic-border-success-hover);
  background: var(--fds-semantic-surface-success-no_fill-hover);
}

.button.outline.success:not([aria-disabled='true'], :disabled):active {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-success-active);

  border-color: var(--fds-semantic-border-success-active);
  background: var(--fds-semantic-surface-success-no_fill-active);
}

.button.outline.danger {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-danger-default);

  border-color: var(--fds-semantic-border-danger-default);
  background: var(--fds-semantic-surface-danger-no_fill);
}

.button.outline.danger:not([aria-disabled='true'], :disabled):hover {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-danger-hover);

  border-color: var(--fds-semantic-border-danger-hover);
  background: var(--fds-semantic-surface-danger-no_fill-hover);
}

.button.outline.danger:not([aria-disabled='true'], :disabled):active {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-danger-active);

  border-color: var(--fds-semantic-border-danger-active);
  background: var(--fds-semantic-surface-danger-no_fill-active);
}

.button.outline.inverted {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-neutral-default);

  border-color: var(--fds-semantic-border-on_inverted-default);
  background: transparent;
}

.button.outline.inverted:not([aria-disabled='true'], :disabled):hover {
  background: var(--fds-semantic-surface-on_inverted-no_fill-hover);
}

.button.outline.inverted:not([aria-disabled='true'], :disabled):active {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-neutral-default);

  background: var(--fds-semantic-surface-on_inverted-no_fill-active);
}

/* Quiet button colors */
.button.quiet.primary {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-action-primary-default);
}

.button.quiet.primary:not([aria-disabled='true'], :disabled):hover {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-action-primary-hover);

  background: var(--fds-semantic-surface-action-primary-no_fill-hover);
}

.button.quiet.primary:not([aria-disabled='true'], :disabled):active {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-action-primary-active);

  background: var(--fds-semantic-text-action-primary-no_fill-active);
}

.button.quiet.secondary {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-action-secondary-default);
}

.button.quiet.secondary:not([aria-disabled='true'], :disabled):hover {
  background: var(--fds-semantic-surface-action-secondary-no_fill-hover);
}

.button.quiet.secondary:not([aria-disabled='true'], :disabled):active {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-action-secondary-active);

  background: var(--fds-semantic-text-action-secondary-no_fill-active);
}

.button.quiet.success {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-success-default);
}

.button.quiet.success:not([aria-disabled='true'], :disabled):hover {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-success-hover);

  background: var(--fds-semantic-surface-success-no_fill-hover);
}

.button.quiet.success:not([aria-disabled='true'], :disabled):active {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-success-active);

  background: var(--fds-semantic-surface-success-no_fill-active);
}

.button.quiet.danger {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-danger-default);
}

.button.quiet.danger:not([aria-disabled='true'], :disabled):hover {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-danger-hover);

  background: var(--fds-semantic-surface-danger-no_fill-hover);
}

.button.quiet.danger:not([aria-disabled='true'], :disabled):active {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-danger-active);

  background: var(--fds-semantic-surface-danger-no_fill-active);
}

.button.quiet.inverted {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-neutral-default-on_inverted);

  background: transparent;
}

.button.quiet.inverted:not([aria-disabled='true'], :disabled):hover {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-neutral-default-on_inverted);

  background: var(--fds-semantic-surface-on_inverted-no_fill-hover);
}

.button.quiet.inverted:not([aria-disabled='true'], :disabled):active {
  --fdsc-font-and-icon-color: var(--fds-semantic-text-neutral-default-on_inverted);

  background: var(--fds-semantic-surface-on_inverted-no_fill-active);
}

.typography {
  color: inherit;
  display: flex;
  align-items: center;
  gap: var(--fds-sizing-2);
}
